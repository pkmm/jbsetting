<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="D:/aizuoye_api_demo_new/server/php/storage/logs/laravel.log" timestamp="1547692784987">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="D:/aizuoye_api_demo_new/client/h5/src/services/app.js" timestamp="1547690267599" />
      <file name="D:/aizuoye_mall/server/php/app/Console/Commands/BindUserWechatInfo.php" timestamp="1547603695951">
        <mark key="[" line="65" column="54" />
        <mark key="]" line="65" column="54" />
        <mark key="." line="65" column="54" />
        <mark key="^" line="49" column="19" />
      </file>
      <file name="D:/aizuoye_api_demo_new/server/php/app/Manager/DetectorManager.php" timestamp="1547692272908">
        <mark key="[" line="207" column="18" />
        <mark key="]" line="221" column="19" />
        <mark key="^" line="221" column="19" />
        <mark key="." line="221" column="19" />
      </file>
      <file name="D:/aizuoye_api_demo_new/client/h5/webpack.config.js" timestamp="1547690095774" />
      <file name="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" timestamp="1547626101906">
        <mark key="'" line="64" column="21" />
        <mark key="[" line="317" column="36" />
        <mark key="]" line="317" column="36" />
        <mark key="." line="317" column="36" />
      </file>
      <file name="D:/aizuoye_pc_v21/server/php/app/Model/SchoolClassTeacher.php" timestamp="1547629886108" />
      <file name="D:/aizuoye_pc_v21/server/php/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Model.php" timestamp="1547629791162" />
      <file name="D:/aizuoye_api_demo_new/client/h5/src/index.js" timestamp="1547690790074" />
      <file name="D:/aizuoye_pc_v21/server/php/app/Manager/ClassManager.php" timestamp="1547448248546">
        <mark key="[" line="778" column="9" />
        <mark key="]" line="779" column="0" />
        <mark key="." line="779" column="0" />
        <mark key="^" line="779" column="9" />
      </file>
      <file name="D:/aizuoye_api_demo_new/client/h5/webpack.config.prod.js" timestamp="1547690141359" />
      <file name="D:/aizuoye_api_demo_new/client/h5/src/utils/request.js" timestamp="1547690847379" />
      <file name="D:/aizuoye_api_demo_new/client/h5/package.json" timestamp="1547690643688">
        <mark key="[" line="10" column="0" />
        <mark key="]" line="11" column="19" />
      </file>
      <file name="D:/aizuoye_pc_v21/server/php/app/Model/SchoolClass.php" timestamp="1547626118126" />
    </filemarks>
    <jumps>
      <jump line="934" column="37" filename="D:/aizuoye_pc_v21/server/php/app/Manager/UserManager.php" />
      <jump line="795" column="7" filename="D:/aizuoye_pc_v21/server/php/app/Manager/UserManager.php" />
      <jump line="931" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Manager/UserManager.php" />
      <jump line="0" column="0" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel-2018-12-11.log" />
      <jump line="20" column="98" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-11.log" />
      <jump line="56" column="226" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-11.log" />
      <jump line="26" column="99" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-11.log" />
      <jump line="1" column="0" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-11.log" />
      <jump line="12" column="43" filename="D:/aizuoye_mall/server/php/storage/logs/laravel.log" />
      <jump line="153" column="24" filename="D:/aizuoye_pc_v21/server/php/resources/views/test.blade.php" />
      <jump line="114" column="4" filename="D:/aizuoye_pc_v21/server/php/resources/views/test.blade.php" />
      <jump line="23" column="92" filename="D:/aizuoye_mall/server/php/storage/logs/laravel.log" />
      <jump line="1" column="0" filename="D:/aizuoye_mall/server/php/storage/logs/laravel.log" />
      <jump line="1083" column="81" filename="D:/aizuoye_mall/server/php/storage/logs/laravel.log" />
      <jump line="29" column="54" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-13.log" />
      <jump line="1" column="178" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-13.log" />
      <jump line="39" column="79" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel-2018-12-13.log" />
      <jump line="0" column="0" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel-2018-12-13.log" />
      <jump line="1596" column="70" filename="D:/aizuoye_mall/server/php/storage/logs/laravel.log" />
      <jump line="169" column="31" filename="D:/aizuoye_mall/server/php/app/Manager/UserManager.php" />
      <jump line="15" column="32" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-18.log" />
      <jump line="23" column="25" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel-2018-12-18.log" />
      <jump line="25" column="23" filename="D:/aizuoye_pc_v21/server/php/.env.dev" />
      <jump line="90" column="22" filename="D:/aizuoye_pc_v21/server/php/app/Manager/Account/Login/BaseLogin.php" />
      <jump line="1753" column="258" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-19.log" />
      <jump line="0" column="0" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-19.log" />
      <jump line="187" column="0" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel.error-2018-12-19.log" />
      <jump line="4884" column="73" filename="D:/aizuoye_pc_v21/server/php/storage/logs/laravel-2018-12-19.log" />
      <jump line="130" column="48" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="142" column="0" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="361" column="39" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="319" column="44" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="368" column="38" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="107" column="29" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="133" column="0" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="333" column="55" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="370" column="35" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="307" column="16" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="434" column="36" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="131" column="48" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="145" column="27" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="89" column="56" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="375" column="9" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="212" column="30" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="135" column="0" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="309" column="32" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="398" column="31" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="110" column="33" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="310" column="16" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="400" column="31" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="134" column="35" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="409" column="35" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="345" column="15" filename="D:/aizuoye_pc_v21/server/php/resources/assets/js/components/HomepagePosterEditor.vue" />
      <jump line="243" column="4" filename="D:/aizuoye_mall/server/php/app/Manager/UserManager.php" />
      <jump line="540" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Manager/UserManager.php" />
      <jump line="318" column="7" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="161" column="65" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="864" column="26" filename="D:/aizuoye_pc_v21/server/php/app/Manager/UserManager.php" />
      <jump line="38" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="699" column="7" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="14" column="19" filename="D:/dev_lll/52pkm.cn/.env.example" />
      <jump line="0" column="0" filename="D:/dev_lll/52pkm.cn/.env.example" />
      <jump line="179" column="37" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="429" column="4" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="17" column="53" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="39" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="325" column="52" filename="D:/aizuoye_mall/server/php/app/Manager/UserManager.php" />
      <jump line="14" column="1" filename="D:/aizuoye_pc_v21/server/php/app/Exceptions/ErrorQrCodeExpired.php" />
      <jump line="13" column="40" filename="D:/aizuoye_trunk_bugfix/server/php/app/Manager/StudentFamilyRecommendManager.php" />
      <jump line="32" column="38" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentFamilyRecommendManager.php" />
      <jump line="89" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Model/User.php" />
      <jump line="90" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Model/User.php" />
      <jump line="134" column="67" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/User/UserMapper.php" />
      <jump line="391" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/User/UserMapper.php" />
      <jump line="425" column="41" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="24" column="41" filename="D:/aizuoye_pc_v21/server/php/app/Services/V2_3/UserService.php" />
      <jump line="242" column="43" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="71" column="58" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentFamilyRecommendManager.php" />
      <jump line="515" column="9" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="344" column="31" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="352" column="52" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="95" column="8" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="325" column="85" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="346" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="54" column="40" filename="D:/aizuoye_pc_v21/server/php/app/Model/Student.php" />
      <jump line="333" column="93" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="31" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="745" column="27" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="752" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="193" column="29" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="1539" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Manager/ExerciseManager.php" />
      <jump line="53" column="34" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="0" column="0" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="135" column="8" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="41" column="6" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentManager.php" />
      <jump line="184" column="22" filename="D:/aizuoye_mall/server/php/app/Manager/UserManager.php" />
      <jump line="328" column="39" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="64" column="21" filename="D:/aizuoye_pc_v21/server/php/app/Manager/StudentProfileManager.php" />
      <jump line="530" column="79" filename="D:/aizuoye_api_demo_new/server/php/storage/logs/laravel.log" />
      <jump line="66" column="41" filename="D:/aizuoye_api_demo_new/server/php/storage/logs/laravel.log" />
    </jumps>
    <registers>
      <register name="&quot;" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="-" type="4">
        <text>;</text>
      </register>
      <register name="/" type="4">
        <text>createOr</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">ICAiYXV0aG9yIjogInN1bmRheXBpZyIsCiAgImxpY2Vuc2UiOiAiSVNDIiwK</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="2" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Ly8gICAgICAgIGRkKCRyZXN1bHRzLCAkZGV0ZWN0UmVzdWx0LT5nZXRZeXRSZXN1bHRzKCkpOwo=</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Ly8gICAgICAgICAgICAgICAgY29udGludWU7Cg==</text>
      </register>
      <register name="5" type="4">
        <text encoding="base64">JHNlc3MgPSBuZXcgVXNlclNlc3Npb25Nb2RlbCgpOwogICAgICAgICAgICAgICAgJHNlc3MtPnNldFVzZXJJZCgkaW5mby0+YXBwX3VzZXJfaWQpOwogICAgICAgICAgICAgICAgJHNlc3MtPnNldEFjY2Vzc1Rva2VuKCRpbmZvLT5hcHBfdXNlcl9hY2Nlc3NfdG9rZW4pOwogICAgICAgICAgICAgICAgJGFwaSA9IG5ldyBCaW5kVXNlcldlY2hhdE1lc3NhZ2UoKTsKICAgICAgICAgICAgICAgICR1c2VyID0gVXNlck1hbmFnZXI6OmdldFVzZXJCeUlkKCRpbmZvLT51c2VyX2lkKTsKICAgICAgICAgICAgICAgICRhcGktPnNldE5pY2tuYW1lKCR1c2VyLT5uaWNrbmFtZSk7CiAgICAgICAgICAgICAgICAkYXBpLT5zZXRVbmlvbklkKCR1c2VyLT51bmlvbl9pZCk7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIEh0dHBQb3N0ZXI6OnBvc3QoZ2V0ZW52KCdBUFBfU0VSVkVSX0hPU1QnKSwgJGFwaSwgJHNlc3MpOwogICAgICAgICAgICAgICAgfSBjYXRjaCAoUmVxdWVzdEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICAgICAgICAgIExvZzo6aW5mbygiYmluZCAkdXNlci0+aWQgZmFpbGVkLiByZWFzb246ICIgLiAkZS0+Z2V0TWVzc2FnZSgpKTsKICAgICAgICAgICAgICAgIH0=</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">IyDK1L7tzbzGrLXEsaO05sK3vrYK</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">SU1BR0VfU0FWRV9QQVRIPS92YXIvbG9jYWwvcGFwZXItYXBpCg==</text>
      </register>
      <register name=":" type="4">
        <text>268</text>
      </register>
    </registers>
    <search>
      <last-search>createOr</last-search>
      <last-offset />
      <last-pattern>createOr</last-pattern>
      <last-replace>~</last-replace>
      <last-substitute>signIn</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry encoding="base64">XDxHUkFOREZBVEhFUjJcPg==</entry>
        <entry encoding="base64">XDxURUFDSEVSXD4=</entry>
        <entry>hash</entry>
        <entry encoding="base64">XDx1bnNpZ25lZEludGVnZXJcPg==</entry>
        <entry encoding="base64">XDx0aW1lc3RhbXBcPg==</entry>
        <entry>%s</entry>
        <entry>bindOp</entry>
        <entry>sign</entry>
        <entry>bindOpen</entry>
        <entry>getUserOp</entry>
        <entry>**</entry>
        <entry>signin</entry>
        <entry>signIN</entry>
        <entry>signIn</entry>
        <entry>updateOr</entry>
        <entry>changeStudent</entry>
        <entry>change%</entry>
        <entry>change</entry>
        <entry>changStudentProfile</entry>
        <entry>createOr</entry>
      </history-search>
      <history-cmd>
        <entry>419</entry>
        <entry>172</entry>
        <entry>778</entry>
        <entry>173</entry>
        <entry>272</entry>
        <entry>53</entry>
        <entry>/%s/data/weChatDecodeData</entry>
        <entry>255</entry>
        <entry>43</entry>
        <entry>set hls</entry>
        <entry>94,114=</entry>
        <entry>94,.=</entry>
        <entry>179</entry>
        <entry>11,69d</entry>
        <entry>113</entry>
        <entry>141</entry>
        <entry>146</entry>
        <entry>367</entry>
        <entry>358</entry>
        <entry>268</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>